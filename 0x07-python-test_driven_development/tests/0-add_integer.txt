The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an 0-add_integer text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer.py`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(1, 2)
    3
    
    >>> add_integer(100, -2)
    98
    
    >>> add_integer(2)
    100

    >>> add_integer(100.3, -2.9)
    98

deal with errors
::
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer("ho", 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

deal with convertions errors
::
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

deal with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
