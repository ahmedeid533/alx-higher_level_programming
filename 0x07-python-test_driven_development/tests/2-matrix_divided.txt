The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an 0-add_integer text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided.py`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

    >>> matrix = [
    ...     [1.5, 2, 3.3],
    ...     [4, 5, 6.6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    [[0.5, 0.67, 1.1], [1.33, 1.67, 2.2]]

deal with invalid matrcies.

::

    >>> matrix = [
    ...     [1.5, "text", 3.3],
    ...     [4, 5, 6.6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [1.5, 5, 3.3]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = 10

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...     [1.5, 3.3],
    ...     [4, 5, 6.6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [
    ...     [1.5, 2, 3.3],
    ...     [4, 5, 6.6]
    ... ]

    >>> print(matrix_divided(matrix, "test"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
